name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Build with Maven
        run: ./mvnw package -DskipTests

      - name: Build and Push Docker Compose Services
        run: |
          docker-compose -f docker-compose.yml build app
          echo "${{ secrets.DOCKER_PASS }}" | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin
          docker-compose -f docker-compose.yml push app

      - name: Create .env file in project
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/testapp/render-boot-bot/
            echo "DB_USER=${{ secrets.DB_USER }}" >> .env
            echo "DB_PASS=${{ secrets.DB_PASS }}" >> .env
            echo "SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/testrenderdb" >> .env
            echo "SPRING_DATASOURCE_USERNAME=${{ secrets.DB_USER }}" >> .env
            echo "SPRING_DATASOURCE_PASSWORD=${{ secrets.DB_PASS }}" >> .env
            echo "SPRING_REDIS_HOST=redis" >> .env
            echo "SPRING_REDIS_PORT=6379" >> .env
            echo "TELEGRAM_BOT_TOKEN=${{ secrets.TG_BOT_TOKEN }}" >> .env

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker login -u ${{ secrets.DOCKER_USER }} --password-stdin <<< "${{ secrets.DOCKER_PASS }}"
            cd ~/testapp/render-boot-bot/
            git pull
            docker-compose -f docker-compose.yml pull
            docker-compose -f docker-compose.yml up -d
